knowledge_base = {
    "использует фигурные скобки": ["C++", "Java", "C#", "JavaScript"],
    "использует отступы для обозначения блоков кода": ["Python", "Ruby"],
    "имеет строгую типизацию": ["C++", "Java", "C#"],
    "имеет динамическую типизацию": ["Python", "JavaScript", "Ruby"],
    "часто используется для веб-разработки": ["JavaScript", "PHP", "Ruby"],
    "часто используется для анализа данных": ["Python", "R"],
    "использует объектно-ориентированный подход": ["C++", "Java", "C#", "Python", "Ruby"],
    "использует функциональное программирование": ["Python", "JavaScript", "Haskell"],
    "популярен в области машинного обучения": ["Python", "R", "Julia"],
    "используется для системного программирования": ["C++", "C"],
    "широко применяется в игровой индустрии": ["C++", "C#"],
    "имеет строгую статическую типизацию": ["Java", "C#"],
    "поддерживает параллельное программирование": ["C++", "Java", "Python"],
    "широко используется в финансовой сфере": ["C#", "Python"],
    "позволяет написать низкоуровневый код": ["C++", "C"]
}
def expert_system(language):
    features = []
    for feature, languages in knowledge_base.items():
        if language in languages:
            features.append(feature)
    return features

language = str(input("Введите язык программирования: "))
print(f"Язык программирования {language} обладает следующими свойствами:")
print(expert_system(language))